@using Imobiliare.Entities
@using Imobiliare.UI.Utils.UrlSeoFormatters
@model Imobiliare.UI.Models.UsersData

@Html.Partial("_MenuSuperAdmin")
<br />

@using (Html.BeginForm("Users", "SuperAdmin", FormMethod.Post, new { date = new DateTime(), id = "PickForm" }))
{
    <text>Tip:</text>
    <select onchange="this.form.submit()" style="width: 170px; margin-left: 3px" class="ui-corner-all ui-widget-shadow ui-widget" name="TipVanzatorSelect">
        @foreach (TipVanzator tipVanzator in Enum.GetValues(typeof(TipVanzator)))
        {
            if (Model.SelectedTipVanzator == tipVanzator)
            {
                <option selected value="@tipVanzator">@tipVanzator</option>
            }
            else
            {
                <option value="@tipVanzator">@tipVanzator</option>
            }            
        }
    </select>
    <text>Role:</text>
    <select onchange="this.form.submit()" style="width: 170px; margin-left: 3px" class="ui-corner-all ui-widget-shadow ui-widget" name="TipRoleSelect">
        @foreach (Role role in Enum.GetValues(typeof(Role)))
        {
            if (Model.SelectedRole == role)
            {
                <option selected value="@role">@role</option>
            }
            else
            {
                <option value="@role">@role</option>
            }            
        }
    </select>
    <h4 style="display: inline-block; padding-left: 4px">Nume:</h4>
    <input type="text" id="UserName" name="UserName" style="width: 180px" />
    <input class="btn btn-success" type="submit" value="Caută" />
}

@if (Model.UserProfiles.Count > 0)
{
    foreach (var user in Model.UserProfiles)
    {
        <div class="row userBoxJs" style="border: 1px solid #a7d582; border-radius: 4px; margin-bottom: 5px;">
            <div class="col-sm-1" style="height: 70px; padding-top: 10px">
                @if (user.Picture != null)
                {
                    <img class="img-thumbnail" style="max-height: 90%; max-width: 90%;" src="~/Images/profileImages/@user.Picture" />
                }
                else
                {
                    <img class="img-thumbnail" style="max-height: 90%; max-width: 90%;" src="~/Images/DecorationImages/profile-icon.png" />
                }
            </div>

            <div class="col-md-11" style="padding-top: 5px">

                <div class="col-sm-4" style="padding-top: 10px">
                    <b>@Html.DisplayFor(model => user.Id)</b>
                    <br />
                    <b>@Html.DisplayFor(model => user.UserName)</b>
                    <br />
                    @if (user.StareUser == StareUser.ExternalLogin)
                    {
                        <span class="label label-info">ext login</span>
                    }
                    else if (user.EmailConfirmed)
                    {
                        <span class="label label-success">confirmat</span>
                    }
                    else
                    {
                        <span class="label label-danger">neconfirmat</span>
                    }
                    Anunturi
                    @{
                        var activeAnunturiCount = user.Anunturi.Count(x => x.StareAprobare == StareAprobare.Aprobat);
                        var inActiveAnunturiCount = user.Anunturi.Count(x => x.StareAprobare != StareAprobare.Aprobat);
                    }
                    <b><span class="glyphicon @(activeAnunturiCount > 0 ? "glyphicon-thumbs-up":"glyphicon-thumbs-down") @(activeAnunturiCount > 0 ? "green":"red")"></span> <span class="label @(activeAnunturiCount > 0 ? "label-success":"label-default")">@activeAnunturiCount</span> active</b>
                    <b><span class="glyphicon @(inActiveAnunturiCount > 0 ? "green":"red")"></span> <span class="label @(inActiveAnunturiCount > 0 ? "label-warning":"label-default")">@inActiveAnunturiCount</span> inactive</b>

                    @if (!string.IsNullOrEmpty(user.Flags))
                    {<br />
                        <p style="display: inline-block; margin: 0; color: blue; white-space: nowrap; font-size: 0.8em">Flags: @Html.DisplayFor(model => user.Flags)</p>
                    }
                </div>
                <div class="col-sm-4">
                    Role: <b>@Html.DisplayFor(model => user.Role)</b>
                    <br />
                    @Html.DisplayFor(model => user.TipVanzator)
                    @if (user.TrustedUser)
                    {
                        <span class="label label-info"><span class="glyphicon glyphicon-star"></span> trusted</span>
                    }
                    @if (user.LastLoginTime != null)
                    {
                        <br />
                        @:LastLogin: <b> @Html.DisplayFor(model => user.LastLoginTime) </b>
                    }<br />
                    Account created: <b>@Html.DisplayFor(model => user.UserCreateDate)</b>
                    @if (!user.EmailConfirmed && user.ConfirmationToken != null && user.ConfirmationToken.Length > 3)
                    {
                        <br />
                        @:Cod confirmare: @user.ConfirmationToken.Substring(0, 4)
                    }

                </div>
                <div class="col-sm-4 btn-group">
                    @if (user.StareUser == StareUser.ExternalLogin || user.EmailConfirmed)
                    {
                        if (user.Anunturi.Any())
                        {
                            <a class="btn btn-success arataAnunturiJs"><span class="glyphicon glyphicon-chevron-down"></span></a>
                            <a class="btn btn-success" href="@Url.Action("Index", "Administrare", new { userid = user.Id })">Anunturi</a>
                        }
                    }
                    else
                    {
                        @Html.ActionLink("Confirma", "ConfirmaCont", "SuperAdmin", new { id = user.Id }, new { @class = "btn btn-primary", style = "background-color: blue" })
                    }
                    <a class="btn btn-success" href="@Url.Action("UserEditare", "SuperAdmin", new { userid = user.Id })"><span class="glyphicon glyphicon-pencil"></span></a>
                    <p class="btn btn-success" style="display: inline-block" onclick="emailDiv('@user.Id', '@user.UserName', '@user.Id')"><span class="glyphicon glyphicon-envelope"></span></p>
                    <a class="btn btn-danger" href="@Url.Action("UserStergere", "SuperAdmin", new { userid = user.Id })" onclick="return confirm('Sunteti sigur ca doriti sa stergeti permanent userul? Verificati sa nu aiba anunturi active.')"><span class="glyphicon glyphicon-trash"></span></a>
                </div>

            </div>

            @if (user.Anunturi.Any())
            {
                foreach (var imobil in user.Anunturi.OrderByDescending(i => i.DataAdaugare).Take(5))
                {
                    <div class="anunturiUser" style="display: none">
                        <div class="col-xs-12 col-sm-1" style="height: 70px; padding-top: 10px">
                            @if (imobil.Poze != null)
                            {
                                <img class="img-thumbnail" style="max-height: 90%; cursor: pointer" src="~/Images/uploadedPhotos/@imobil.FirstPhoto" />
                                <div style="position: absolute; top: 7px; left: 8px; opacity: 0.8; width: 40px; background-color: #fff; font-weight: bold; font-size: 11px;">
                                    <span style="padding-left: 7px" class="glyphicon glyphicon-camera"></span>
                                    <b style="padding-left: 2px; font-size: 1.2em">@imobil.Poze.Split(';').Count()</b>
                                </div>
                            }
                            else
                            {
                                <img class="img-thumbnail" style="max-height: 90%; cursor: pointer" src="~/Images/uploadedPhotos/@imobil.FirstPhoto" />
                            }
                        </div>
                        <div class="col-xs-12 col-sm-7 detalii2">
                            @imobil.Title
                            @Html.ActionLink(imobil.UserProfile.UserName, "Index", "Administrare", new { userid = imobil.UserProfile.Id }, null)
                            <br />
                            @if (imobil.StareAprobare == StareAprobare.Aprobat)
                            {
                                <span class="label label-success">@Html.DisplayFor(model => imobil.StareAprobare)</span>
                            }
                            else if (imobil.StareAprobare == StareAprobare.Dezactivat || imobil.StareAprobare == StareAprobare.Expirat || imobil.StareAprobare == StareAprobare.Respins)
                            {
                                <span class="label label-danger">@Html.DisplayFor(model => imobil.StareAprobare)</span>
                            }
                            else if (imobil.StareAprobare == StareAprobare.Vandut || imobil.StareAprobare == StareAprobare.InAsteptare)
                            {
                                <span class="label label-info">@Html.DisplayFor(model => imobil.StareAprobare)</span>
                            }
                            else
                            {
                                <span class="label label-danger">@Html.DisplayFor(model => imobil.StareAprobare)</span>
                            }
                            @switch (imobil.PromotedLevel)
                            {
                                case PromovatLevel.PromovatNormal:
                                    <span class="label label-success"><span class="glyphicon glyphicon-star"></span> promovat normal</span>
                                    break;
                                case PromovatLevel.SuperPromovat:
                                    <span class="label label-success"><span class="glyphicon glyphicon-star"></span> super promovat</span>
                                    break;
                                case PromovatLevel.ExceptionalPromovat:
                                    <span class="label label-success"><span class="glyphicon glyphicon-star"></span> exceptional promovat</span>
                                    break;
                            }
                            <span class="glyphicon glyphicon-eye-open"></span> @imobil.NumarVizualizari
                            <br />
                            Adaugare/React: @Html.DisplayFor(model => imobil.DataAdaugare)
                            <br />
                            Ad initiala: @Html.DisplayFor(model => imobil.DataAdaugareInitiala)
                        </div>
                    </div>
                    <div class="clearfix"></div>
                }
            }

        </div>
    }

    if (Model.NumberOfPages > 1)
    {
        <p style="margin: 10px 0 0 0">Pagina @Model.Page din @Model.NumberOfPages</p>
        <nav>
            <ul class="pagination pagination-lg"></ul>
        </nav>
    }
}

<div id="light" class="white_content">
    <a href="javascript:void(0)" onclick="document.getElementById('light').style.display = 'none'; document.getElementById('fade').style.display = 'none'; $('#adresaEmailTip').empty();">Inchide Fereastra</a>
    @using (Html.BeginForm("SendEmailToUser", "SuperAdmin", FormMethod.Post))
    {
        <input type="hidden" style="display: inline-block; width: 50px" id="emailConfirmareUserId" name="emailConfirmareUserId" readonly="readonly" />
        <br />
        <p style="display: inline-block">Email:</p>
        <input style="display: inline-block; width: 30%" id="emailConfirmareAnuntEmail" name="emailConfirmareAnuntEmail" />
        <select style="width: 30%; margin-left: 3px" class="ui-corner-all ui-widget-shadow ui-widget" id="adresaEmailTip"></select>
        <br />
        <br />
        <p style="display: inline-block">Template:</p>
        <select style="width: 70%; margin-left: 3px" class="ui-corner-all ui-widget-shadow ui-widget" name="EmailTemplateHumanReadableId">
            @foreach (var emailTemplate in Model.EmailTemplates)
            {
                <option value="@emailTemplate.HumanReadableEmailIdentifier">@emailTemplate.HumanReadableEmailIdentifier</option>
            }
        </select>
        @*<br/>
            <br/>
            <p style="display: inline-block">Mesaj:</p>
            <textarea style="display: inline-block; min-height: 110px; width: 100%" id="emailConfirmareAnuntMesaj" name="emailConfirmareAnuntMesaj"></textarea>*@
        <br />
        <br />
        <input type="hidden" name="returnUrl" value="@HttpContext.Current.Request.Url.AbsoluteUri" />
        <input type="submit" value="Trimite Email" onclick="if ($('#emailConfirmareAnuntEmail').val().indexOf('Nu are email definit') != -1) { return confirm('Adresa de email invalida, apasati cancel!!!'); }" />
        <input type="button" value="Anuleaza" onclick="document.getElementById('light').style.display = 'none'; document.getElementById('fade').style.display = 'none'; $('#adresaEmailTip').empty();" />
    }

</div>
<div id="fade" class="black_overlay"></div>

<style>
    .black_overlay {
        display: none;
        position: fixed;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: black;
        z-index: 1001;
        -moz-opacity: 0.4;
        opacity: .40;
        filter: alpha(opacity=40);
    }

    .white_content {
        display: none;
        position: fixed;
        top: 25%;
        left: 25%;
        width: 50%;
        height: 50%;
        padding: 16px;
        border: 10px solid #a7d582;
        background-color: white;
        z-index: 1002;
        overflow: auto;
    }
</style>

@section Scripts {
    @Html.Partial("_GenericPaging")

    <script type="text/javascript">
        function emailDiv(user, contactEmail, userId) {
            $("#adresaEmailTip").children().remove();
            $("#light").show();
            document.getElementById('light').style.display = 'block';
            document.getElementById('fade').style.display = 'block';
            $("#emailConfirmareUserId").val(userId);

            if (contactEmail == '') {
                contactEmail = "Nu are email definit la contact(evtl selectati celalalt email)";
            }

            var o1 = new Option(contactEmail, contactEmail);
            $(o1).html(contactEmail);
            $("#adresaEmailTip").append(o1);

            var o = new Option(user, user);
            /// jquerify the DOM object 'o' so we can use the html method
            $(o).html(user);
            $("#adresaEmailTip").append(o);

            //FormatFinalMesaj();
            $("#emailConfirmareAnuntEmail").val($("#adresaEmailTip").val());
        }

        $(document).ready(function () {
            $(".arataAnunturiJs").on("click",
                function () {
                    $(this).closest(".userBoxJs").find(".anunturiUser").fadeToggle();
                });
        });
    </script>
}